/*
 * This file is generated by jOOQ.
 */
package org.example.db.generated.tables.records;


import java.math.BigDecimal;
import java.time.OffsetDateTime;

import org.example.db.generated.enums.MpaaRating;
import org.example.db.generated.tables.Film;
import org.example.db.generated.tables.interfaces.IFilm;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmRecord extends UpdatableRecordImpl<FilmRecord> implements Record14<Integer, String, String, Integer, Integer, Integer, Short, BigDecimal, Short, BigDecimal, MpaaRating, OffsetDateTime, String[], Object>, IFilm {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.film.film_id</code>.
     */
    public void setFilmId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.film.film_id</code>.
     */
    @Override
    public Integer getFilmId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.film.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.film.title</code>.
     */
    @Override
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.film.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.film.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.film.release_year</code>.
     */
    public void setReleaseYear(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.film.release_year</code>.
     */
    @Override
    public Integer getReleaseYear() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.film.language_id</code>.
     */
    public void setLanguageId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.film.language_id</code>.
     */
    @Override
    public Integer getLanguageId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.film.original_language_id</code>.
     */
    public void setOriginalLanguageId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.film.original_language_id</code>.
     */
    @Override
    public Integer getOriginalLanguageId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.film.rental_duration</code>.
     */
    public void setRentalDuration(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.film.rental_duration</code>.
     */
    @Override
    public Short getRentalDuration() {
        return (Short) get(6);
    }

    /**
     * Setter for <code>public.film.rental_rate</code>.
     */
    public void setRentalRate(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.film.rental_rate</code>.
     */
    @Override
    public BigDecimal getRentalRate() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>public.film.length</code>.
     */
    public void setLength(Short value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.film.length</code>.
     */
    @Override
    public Short getLength() {
        return (Short) get(8);
    }

    /**
     * Setter for <code>public.film.replacement_cost</code>.
     */
    public void setReplacementCost(BigDecimal value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.film.replacement_cost</code>.
     */
    @Override
    public BigDecimal getReplacementCost() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>public.film.rating</code>.
     */
    public void setRating(MpaaRating value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.film.rating</code>.
     */
    @Override
    public MpaaRating getRating() {
        return (MpaaRating) get(10);
    }

    /**
     * Setter for <code>public.film.last_update</code>.
     */
    public void setLastUpdate(OffsetDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.film.last_update</code>.
     */
    @Override
    public OffsetDateTime getLastUpdate() {
        return (OffsetDateTime) get(11);
    }

    /**
     * Setter for <code>public.film.special_features</code>.
     */
    public void setSpecialFeatures(String[] value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.film.special_features</code>.
     */
    @Override
    public String[] getSpecialFeatures() {
        return (String[]) get(12);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setFulltext(Object value) {
        set(13, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object getFulltext() {
        return get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, String, String, Integer, Integer, Integer, Short, BigDecimal, Short, BigDecimal, MpaaRating, OffsetDateTime, String[], Object> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, String, String, Integer, Integer, Integer, Short, BigDecimal, Short, BigDecimal, MpaaRating, OffsetDateTime, String[], Object> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Film.FILM.FILM_ID;
    }

    @Override
    public Field<String> field2() {
        return Film.FILM.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Film.FILM.DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return Film.FILM.RELEASE_YEAR;
    }

    @Override
    public Field<Integer> field5() {
        return Film.FILM.LANGUAGE_ID;
    }

    @Override
    public Field<Integer> field6() {
        return Film.FILM.ORIGINAL_LANGUAGE_ID;
    }

    @Override
    public Field<Short> field7() {
        return Film.FILM.RENTAL_DURATION;
    }

    @Override
    public Field<BigDecimal> field8() {
        return Film.FILM.RENTAL_RATE;
    }

    @Override
    public Field<Short> field9() {
        return Film.FILM.LENGTH;
    }

    @Override
    public Field<BigDecimal> field10() {
        return Film.FILM.REPLACEMENT_COST;
    }

    @Override
    public Field<MpaaRating> field11() {
        return Film.FILM.RATING;
    }

    @Override
    public Field<OffsetDateTime> field12() {
        return Film.FILM.LAST_UPDATE;
    }

    @Override
    public Field<String[]> field13() {
        return Film.FILM.SPECIAL_FEATURES;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field14() {
        return Film.FILM.FULLTEXT;
    }

    @Override
    public Integer component1() {
        return getFilmId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer component4() {
        return getReleaseYear();
    }

    @Override
    public Integer component5() {
        return getLanguageId();
    }

    @Override
    public Integer component6() {
        return getOriginalLanguageId();
    }

    @Override
    public Short component7() {
        return getRentalDuration();
    }

    @Override
    public BigDecimal component8() {
        return getRentalRate();
    }

    @Override
    public Short component9() {
        return getLength();
    }

    @Override
    public BigDecimal component10() {
        return getReplacementCost();
    }

    @Override
    public MpaaRating component11() {
        return getRating();
    }

    @Override
    public OffsetDateTime component12() {
        return getLastUpdate();
    }

    @Override
    public String[] component13() {
        return getSpecialFeatures();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object component14() {
        return getFulltext();
    }

    @Override
    public Integer value1() {
        return getFilmId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Integer value4() {
        return getReleaseYear();
    }

    @Override
    public Integer value5() {
        return getLanguageId();
    }

    @Override
    public Integer value6() {
        return getOriginalLanguageId();
    }

    @Override
    public Short value7() {
        return getRentalDuration();
    }

    @Override
    public BigDecimal value8() {
        return getRentalRate();
    }

    @Override
    public Short value9() {
        return getLength();
    }

    @Override
    public BigDecimal value10() {
        return getReplacementCost();
    }

    @Override
    public MpaaRating value11() {
        return getRating();
    }

    @Override
    public OffsetDateTime value12() {
        return getLastUpdate();
    }

    @Override
    public String[] value13() {
        return getSpecialFeatures();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object value14() {
        return getFulltext();
    }

    @Override
    public FilmRecord value1(Integer value) {
        setFilmId(value);
        return this;
    }

    @Override
    public FilmRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public FilmRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public FilmRecord value4(Integer value) {
        setReleaseYear(value);
        return this;
    }

    @Override
    public FilmRecord value5(Integer value) {
        setLanguageId(value);
        return this;
    }

    @Override
    public FilmRecord value6(Integer value) {
        setOriginalLanguageId(value);
        return this;
    }

    @Override
    public FilmRecord value7(Short value) {
        setRentalDuration(value);
        return this;
    }

    @Override
    public FilmRecord value8(BigDecimal value) {
        setRentalRate(value);
        return this;
    }

    @Override
    public FilmRecord value9(Short value) {
        setLength(value);
        return this;
    }

    @Override
    public FilmRecord value10(BigDecimal value) {
        setReplacementCost(value);
        return this;
    }

    @Override
    public FilmRecord value11(MpaaRating value) {
        setRating(value);
        return this;
    }

    @Override
    public FilmRecord value12(OffsetDateTime value) {
        setLastUpdate(value);
        return this;
    }

    @Override
    public FilmRecord value13(String[] value) {
        setSpecialFeatures(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public FilmRecord value14(Object value) {
        setFulltext(value);
        return this;
    }

    @Override
    public FilmRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5, Integer value6, Short value7, BigDecimal value8, Short value9, BigDecimal value10, MpaaRating value11, OffsetDateTime value12, String[] value13, Object value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IFilm from) {
        setFilmId(from.getFilmId());
        setTitle(from.getTitle());
        setDescription(from.getDescription());
        setReleaseYear(from.getReleaseYear());
        setLanguageId(from.getLanguageId());
        setOriginalLanguageId(from.getOriginalLanguageId());
        setRentalDuration(from.getRentalDuration());
        setRentalRate(from.getRentalRate());
        setLength(from.getLength());
        setReplacementCost(from.getReplacementCost());
        setRating(from.getRating());
        setLastUpdate(from.getLastUpdate());
        setSpecialFeatures(from.getSpecialFeatures());
        setFulltext(from.getFulltext());
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FilmRecord
     */
    public FilmRecord() {
        super(Film.FILM);
    }

    /**
     * Create a detached, initialised FilmRecord
     */
    public FilmRecord(Integer filmId, String title, String description, Integer releaseYear, Integer languageId, Integer originalLanguageId, Short rentalDuration, BigDecimal rentalRate, Short length, BigDecimal replacementCost, MpaaRating rating, OffsetDateTime lastUpdate, String[] specialFeatures, Object fulltext) {
        super(Film.FILM);

        setFilmId(filmId);
        setTitle(title);
        setDescription(description);
        setReleaseYear(releaseYear);
        setLanguageId(languageId);
        setOriginalLanguageId(originalLanguageId);
        setRentalDuration(rentalDuration);
        setRentalRate(rentalRate);
        setLength(length);
        setReplacementCost(replacementCost);
        setRating(rating);
        setLastUpdate(lastUpdate);
        setSpecialFeatures(specialFeatures);
        setFulltext(fulltext);
    }

    /**
     * Create a detached, initialised FilmRecord
     */
    public FilmRecord(org.example.db.generated.tables.pojos.Film value) {
        super(Film.FILM);

        if (value != null) {
            setFilmId(value.getFilmId());
            setTitle(value.getTitle());
            setDescription(value.getDescription());
            setReleaseYear(value.getReleaseYear());
            setLanguageId(value.getLanguageId());
            setOriginalLanguageId(value.getOriginalLanguageId());
            setRentalDuration(value.getRentalDuration());
            setRentalRate(value.getRentalRate());
            setLength(value.getLength());
            setReplacementCost(value.getReplacementCost());
            setRating(value.getRating());
            setLastUpdate(value.getLastUpdate());
            setSpecialFeatures(value.getSpecialFeatures());
            setFulltext(value.getFulltext());
        }
    }
}
